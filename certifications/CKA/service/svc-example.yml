apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-svc-example
spec:
  replicas: 3
  selector:
    matchLabels:
      app: svc-example
  template:
    metadata:
      labels:
        app: svc-example
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: svc-clusterip
spec:
  type: ClusterIP
  # determines which pods will direct traffic to
  selector:
    app: svc-example
  ports:
    - port: 8080
      targetPort: 80
      protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: svc-nodeport
spec:
  type: NodePort
  # determines which pods will direct traffic to
  selector:
    app: svc-example
  ports:
    - name: 8080-80
      port: 8080
      targetPort: 80
      protocol: TCP
      # if you leave it out, k8s will choose a random port
      # Kubernetesâ€™ default NodePort range is 30000-32767
      nodePort: 30080


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  rules:
    - http:
        paths:
          # more difficult to strip prefix with traefic ingress controller
          #https://stackoverflow.com/questions/71398933/how-to-strip-the-path-prefix-in-kubernetes-traefik-ingress
          - path: /
            pathType: Prefix
            backend:
              service:
                name: svc-clusterip
                port:
                  number: 8080